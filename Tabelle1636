import xml.etree.ElementTree as ET
import pandas as pd

# Pfad zur XML-Datei (Name muss exakt stimmen!)
file_path = '/Users/annagisiger/Desktop/HainhoferProjekt1936/Muenchen-1636-14 (4).xml'
tree = ET.parse(file_path)
root = tree.getroot()

namespaces = {'tei': 'http://www.tei-c.org/ns/1.0'}

def extract_text(elem):
    return ''.join(elem.itertext()).strip() if elem is not None else ''

entries = []
current_page = None

for elem in root.findall('.//tei:body//tei:div//*', namespaces):
    tag = elem.tag.split('}')[-1]

    if tag == 'pb':
        current_page = elem.attrib.get('n', None)

    elif tag == 'date':
        entries.append({
            'type': 'date',
            'text': extract_text(elem),
            'ref': elem.attrib.get('when') or elem.attrib.get('when-custom'),
            'page': current_page
        })

    elif tag == 'rs' and elem.attrib.get('type') == 'place':
        entries.append({
            'type': 'place',
            'text': extract_text(elem),
            'ref': elem.attrib.get('ref'),
            'page': current_page
        })

    elif tag == 'rs' and elem.attrib.get('type') == 'person':
        entries.append({
            'type': 'person',
            'text': extract_text(elem),
            'ref': elem.attrib.get('ref'),
            'page': current_page
        })

    elif tag == 'note':
        entries.append({
            'type': 'note',
            'text': extract_text(elem),
            'ref': elem.attrib.get('type'),
            'page': current_page
        })

# Tabelle erzeugen
df = pd.DataFrame(entries)

# Vorschau im Terminal
print(df.head(10))

# Als CSV speichern
df.to_csv('/Users/annagisiger/Desktop/hainhofer_daten.csv', index=False)
print("âœ… CSV wurde auf dem Desktop gespeichert.")
